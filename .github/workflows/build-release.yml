name: Multi-Arch Build

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build-exe-64:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
      
    - name: Setup Python 64-bit
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
        architecture: x64

    - name: Install dependencies
      run: pip install pyinstaller

    - name: Build EXE
      run: pyinstaller --onefile ok_school_life.py

    - uses: actions/upload-artifact@v4
      with:
        name: exe-64
        path: dist/

  build-exe-32:
    runs-on: ubuntu-latest
    container:
      image: python:3.10-slim
    steps:
    - uses: actions/checkout@v4

    - name: Configure environment
      run: |
        # 创建隔离环境
        export WORKSPACE="/tmp/wine_$(date +%s)"
        mkdir -p "$WORKSPACE"
        echo "WORKSPACE=$WORKSPACE" >> $GITHUB_ENV
        echo "WINEPREFIX=$WORKSPACE/wine32" >> $GITHUB_ENV
        echo "WINEARCH=win32" >> $GITHUB_ENV
        echo "HOME=$WORKSPACE/home" >> $GITHUB_ENV

    - name: Install dependencies
      run: |
        apt-get update
        apt-get install -y \
          wget \
          gnupg \
          software-properties-common \
          xvfb \
          winehq-stable \
          cabextract

    - name: Initialize Wine
      run: |
        mkdir -p "$WINEPREFIX"
        chmod -R 700 "$WINEPREFIX"
        
        xvfb-run -a wine wineboot --init
        wine reg add "HKEY_CURRENT_USER\\Environment" /v WINEPREFIX /t REG_SZ /d "$WINEPREFIX" /f

    - name: Build 32-bit EXE
      run: |
        # 这里添加具体的构建命令
        xvfb-run -a wine python ok_school_life.py

    - uses: actions/upload-artifact@v4
      with:
        name: exe-32
        path: dist/

  create-release:
    needs: [build-exe-64, build-exe-32]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@v4
      with:
        path: artifacts
        
    - uses: ncipollo/release-action@v1
      with:
        tag: ${{ github.ref_name }}
        artifacts: |
          artifacts/exe-64/*.exe
          artifacts/exe-32/*.exe
        token: ${{ secrets.GITHUB_TOKEN }}
